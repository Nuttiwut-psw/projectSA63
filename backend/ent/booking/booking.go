// Code generated by entc, DO NOT EDIT.

package booking

const (
	// Label holds the string label denoting the booking type in the database.
	Label = "booking"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"

	// EdgeDoctorID holds the string denoting the doctor_id edge name in mutations.
	EdgeDoctorID = "doctor_id"
	// EdgePatientID holds the string denoting the patient_id edge name in mutations.
	EdgePatientID = "patient_id"
	// EdgeOperationroomID holds the string denoting the operationroom_id edge name in mutations.
	EdgeOperationroomID = "operationroom_id"

	// Table holds the table name of the booking in the database.
	Table = "bookings"
	// DoctorIDTable is the table the holds the doctor_id relation/edge.
	DoctorIDTable = "bookings"
	// DoctorIDInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	DoctorIDInverseTable = "users"
	// DoctorIDColumn is the table column denoting the doctor_id relation/edge.
	DoctorIDColumn = "user_doctor_id"
	// PatientIDTable is the table the holds the patient_id relation/edge.
	PatientIDTable = "bookings"
	// PatientIDInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PatientIDInverseTable = "patients"
	// PatientIDColumn is the table column denoting the patient_id relation/edge.
	PatientIDColumn = "patient_patient_id"
	// OperationroomIDTable is the table the holds the operationroom_id relation/edge.
	OperationroomIDTable = "bookings"
	// OperationroomIDInverseTable is the table name for the Operationroom entity.
	// It exists in this package in order to avoid circular dependency with the "operationroom" package.
	OperationroomIDInverseTable = "operationrooms"
	// OperationroomIDColumn is the table column denoting the operationroom_id relation/edge.
	OperationroomIDColumn = "operationroom_operationroom_id"
)

// Columns holds all SQL columns for booking fields.
var Columns = []string{
	FieldID,
	FieldDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Booking type.
var ForeignKeys = []string{
	"operationroom_operationroom_id",
	"patient_patient_id",
	"user_doctor_id",
}
